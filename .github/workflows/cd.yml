name: CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3. Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            echo "Error: frontend/package-lock.json missing!"
            exit 1
          fi

      # 4. Build frontend
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # 5. Configure AWS credentials
      - name: Configure AWS credentials
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' && secrets.AWS_REGION != '' }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 6. Deploy frontend to S3
      - name: Deploy frontend to S3
        if: ${{ secrets.S3_BUCKET != '' }}
        run: |
          aws s3 sync frontend/build/ s3://${{ secrets.S3_BUCKET }} --delete

      # 7. Optional: Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        if: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID != '' }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
