
name: CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Verify frontend folder exists
      - name: Verify frontend folder
        run: |
          if [ ! -d "./frontend" ]; then
            echo "Error: ./frontend folder does not exist!"
            exit 1
          fi

      # 4. Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      # 5. Build frontend
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # 6. Check required AWS secrets
      - name: Check AWS secrets
        run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] || \
             [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ] || \
             [ -z "${{ secrets.AWS_REGION }}" ]; then
            echo "Error: AWS secrets are not set!"
            exit 1
          fi

      # 7. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 8. Deploy to S3
      - name: Deploy to S3
        run: |
          echo "Deploying frontend to S3..."
          aws s3 sync frontend/build/ s3://aws-cloud-native-ecommerce-frontend --delete
          echo "Frontend deployed successfully!"

      # 9. Optional: Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        if: success() && ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID != '' }}
        run: |
          echo "Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
          echo "CloudFront cache invalidated."
