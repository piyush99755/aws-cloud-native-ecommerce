
name: CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Verify frontend folder and lockfile
      - name: Verify frontend folder & lockfile
        run: |
          if [ ! -d "./frontend" ]; then
            echo "Error: frontend folder does not exist!"
            exit 1
          fi
          if [ ! -f "./frontend/package-lock.json" ]; then
            echo "Error: frontend/package-lock.json missing!"
            exit 1
          fi

      # 4. Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      # 5. Build frontend
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # 6. Verify backend folder and lockfile (if backend deployment is needed)
      - name: Verify backend folder & lockfile
        run: |
          if [ ! -d "./backend" ]; then
            echo "Warning: backend folder does not exist, skipping backend steps."
          elif [ ! -f "./backend/package-lock.json" ]; then
            echo "Error: backend/package-lock.json missing!"
            exit 1
          fi

      # 7. Install backend dependencies (optional)
      - name: Install backend dependencies
        if: ${{ always() && (exists('backend/package-lock.json')) }}
        working-directory: ./backend
        run: npm ci

      # 8. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 9. Deploy frontend to S3
      - name: Deploy frontend to S3
        run: |
          echo "Deploying frontend to S3..."
          aws s3 sync frontend/build/ s3://aws-cloud-native-ecommerce-frontend --delete
          echo "Frontend deployed successfully!"

      # 10. Optional: Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        if: success() && ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID != '' }}
        run: |
          echo "Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
          echo "CloudFront cache invalidated."
