
name: CD

on:
  push:
    branches:
      - main  # deploy on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # ensures full checkout

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Upgrade npm (optional but ensures npm ci works)
      - name: Upgrade npm
        run: npm install -g npm@9
        working-directory: ./frontend

      # 4. Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      # 5. Build frontend
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # 6. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 7. Deploy to S3
      - name: Deploy to S3
        run: |
          aws s3 sync frontend/build/ s3://aws-cloud-native-ecommerce-frontend --delete
          echo "Frontend deployed to S3 successfully!"

      # 8. Optional: Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        if: success() && ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID != '' }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
          echo "CloudFront cache invalidated"

