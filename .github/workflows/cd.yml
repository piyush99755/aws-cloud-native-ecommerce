
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1

    steps:
      # 1️ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3️ Install backend dependencies if exists
      - name: Build Backend
        if: ${{ always() }}
        run: |
          if [ -f backend/package-lock.json ]; then
            echo "Building backend..."
            cd backend
            npm ci
            npm run build || echo "No build script found"
            cd ..
          else
            echo "No backend package-lock.json, skipping backend"
          fi

      # 4️Install frontend dependencies
      - name: Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build
          cd ..

      # 5️ Deploy backend to Elastic Beanstalk
      - name: Deploy Backend to Elastic Beanstalk
        if: ${{ secrets.EB_APP_NAME && secrets.EB_ENV_NAME && secrets.AWS_ACCESS_KEY_ID && secrets.AWS_SECRET_ACCESS_KEY }}
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          application_name: ${{ secrets.EB_APP_NAME }}
          environment_name: ${{ secrets.EB_ENV_NAME }}
          region: ${{ env.AWS_REGION }}
          version_label: ${{ github.sha }}
          bucket_name: ${{ secrets.EB_BUCKET }}
          bucket_key: backend-${{ github.sha }}.zip
          zip_file: backend.zip

      # 6️ Deploy frontend to S3 + invalidate CloudFront
      - name: Deploy Frontend to S3
        if: ${{ secrets.S3_BUCKET && secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        run: |
          aws s3 sync frontend/build s3://${{ secrets.S3_BUCKET }} --delete
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
