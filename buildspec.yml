version: 0.2

env:
  variables:
    FRONTEND_BUCKET: "aws-cloud-native-ecommerce-frontend"
    BACKEND_EB_APP: "aws-cloud-native-ecommerce"
    BACKEND_EB_ENV: "ecommerce-env"
    ARTIFACT_BUCKET: "aws-cloud-native-ecommerce-artifacts"
    TIMESTAMP: "app-$(date +%Y%m%d%H%M%S)"
    CLOUDFRONT_DIST_ID: "E27VTXLPQICWAN"
    BUILD_MODE: "full"  # Options: full, backend

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo "Installing dependencies..."
      - yum install -y zip unzip  # ensure zip is available in CodeBuild
      - |
        if [ "$BUILD_MODE" = "full" ]; then
          echo "Installing frontend dependencies..."
          cd frontend && npm ci && cd ..
        fi
      - echo "Installing backend dependencies..."
      - cd backend && npm ci && cd ..

  build:
    commands:
      - echo "Packaging backend for Elastic Beanstalk..."
      - cd backend
      # Important: put Procfile, package.json, server.js at root of zip
      - zip -r ../backend.zip . -x "node_modules/*" "*.log" "*.env" ".git/*"
      - cd ..
      - |
        if [ "$BUILD_MODE" = "full" ]; then
          echo "Building frontend React app..."
          cd frontend && npm run build && cd ..
        fi

post_build:
  commands:
    - echo "Uploading backend.zip to S3..."
    - aws s3 cp backend.zip s3://$ARTIFACT_BUCKET/backend/$TIMESTAMP.zip
    - echo "Creating Elastic Beanstalk application version..."
    - aws elasticbeanstalk create-application-version \
        --application-name $BACKEND_EB_APP \
        --version-label $TIMESTAMP \
        --source-bundle S3Bucket=$ARTIFACT_BUCKET,S3Key=backend/$TIMESTAMP.zip
    - echo "Updating Elastic Beanstalk environment..."
    - aws elasticbeanstalk update-environment \
        --environment-name $BACKEND_EB_ENV \
        --version-label $TIMESTAMP
    - |
      if [ "$BUILD_MODE" = "full" ]; then
        echo "Uploading frontend build to S3..."
        aws s3 sync frontend/build s3://$FRONTEND_BUCKET --delete
        echo "Invalidating CloudFront cache..."
        aws cloudfront create-invalidation \
          --distribution-id $CLOUDFRONT_DIST_ID \
          --paths "/*"
      fi
    - echo "âœ… Build and deployment completed."

artifacts:
  files:
    - backend.zip
    - frontend/build/**/*   # Only included if BUILD_MODE=full
  discard-paths: no
  secondary-artifacts:
    BackendArtifact:
      files:
        - backend.zip
      discard-paths: yes
